@{
    ViewBag.Title = Model.Classroom.Name;
}

@model ClassroomDigiStudentVM


<div id="wrapper">

    <div id="alias" hidden>@Model.Alias</div>
    <center><div id="classroomName">@Model.Classroom.Name</div></center>
    <audio id="notification" src="~/audio/icq.mp3">
    </audio>
    <br />
    <div class="containerClassroom">

        @Html.Partial("_StudentProblemBox")
        @Html.Partial("_StudentChatbox")

    </div>
    <br />
    <div class="containerClassroom">
        @Html.Partial("_loggedInList")

        @Html.Partial("_StudentWaitingList")
        @Html.Partial("_StudentInfoboxFromTeacher")
    </div>
</div>
@section scriptsSection
    {
    <script src="~/js/signalr-client-1.0.0-alpha2-final.min.js"></script>
    <script>
        let digiUi = {
            chatBoxButton: $("#chatBoxButton"),
            alias: $("#alias"),
            messageBox: $("#messageBox"),
            chatBox: $("#chatBox"),
            problemButton: $("#problemButton"),
            locationText: $("#locationText"),
            descriptionText: $("#descriptionText"),
            infoBox: $("#infoBox"),
            waitingList: $("#waitingList"),
            notification: $("#notification")[0]
        }

        let digiFunctions = {
            ChatSend: 'ChatSend',
            onChatSend: 'onChatSend',
            onUpdateInfoBox: 'onUpdateInfoBox',
            RemoveSelfFromWaitingList: 'RemoveSelfFromWaitingList',
            GetWaitingList: 'GetWaitingList',
            onUpdateWaitingListItem: 'onUpdateWaitingListItem',
            AddWaitingListItem: 'AddWaitingListItem',
            onInfoSend: 'onInfoSend'

        }

        $(document).ready(function () {
            let connection = new signalR.HubConnection('/digihub');
            connection.start().then(function () {
                connection.invoke(digiFunctions.GetWaitingList, $("#classroomName").text());
                let message =
                    {
                        "alias": digiUi.alias.text(),
                        "command": "LogIn",
                        "classroomName": $("#classroomName").text()
                    }
                connection.invoke('GetLoggedInList', JSON.stringify(message));
            });


            digiUi.chatBoxButton.click(() => {
                if (digiUi.messageBox.val().length > 100) {
                    alert("Ditt meddelande är för långt, var vänlig korta ner ditt meddelande.");
                } else {

                    let message = {
                        "alias": digiUi.alias.text(),
                        "classroomName": $("#classroomName").text(),
                        "description": digiUi.messageBox.val(),
                        "command": "Message"
                    }
                    connection.invoke(digiFunctions.ChatSend, JSON.stringify(message));
                    digiUi.messageBox.val("");
                }
            });

            connection.on(digiFunctions.onChatSend, data => {
                digiUi.chatBox.append(data + "\n");
                digiUi.chatBox.scrollTop(digiUi.chatBox[0].scrollHeight);
            });

            connection.on('onRemoveItem', data => {
                digiUi.problemButton.text("Add");
                alert("Läraren har tagit bort dig från listan");
            }); 

            digiUi.problemButton.click(() => {
                if (digiUi.problemButton.text() == "Add") {
                    if (digiUi.descriptionText.val().length > 100) {
                        alert("Din problembeskrivning är för lång, var vänlig korta ner din beskrivning.");
                    } else {

                        digiUi.problemButton.text("Delete");
                        let message = {
                            "alias": digiUi.alias.text(),
                            "location": digiUi.locationText.val(),
                            "description": digiUi.descriptionText.val(),
                            "command": "Add",
                            "classroomName": $("#classroomName").text(),
                            "ptype": $('#PType').find(":selected").val()
                        }
                        connection.invoke(digiFunctions.AddWaitingListItem, JSON.stringify(message));
                    }
                } else //Delete
                {
                    let message = {
                        "alias": digiUi.alias.text(),
                        "command": "Remove",
                        "classroomName": $("#classroomName").text()
                    }
                    digiUi.problemButton.text("Add");
                    connection.invoke(digiFunctions.RemoveSelfFromWaitingList, JSON.stringify(message));
                }
            });

            connection.on(digiFunctions.onUpdateWaitingListItem, data => {
                digiUi.waitingList.text("");
                var jsonObj = JSON.parse(data);
                for (var i = 0; i < jsonObj.length; i++) {
                    var lang = jsonObj[i].Language;
                    if (lang == "Csharp") {
                        lang = "C#";
                    }
                    digiUi.waitingList.append(jsonObj[i].Alias + " | " + jsonObj[i].Location + " | " + jsonObj[i].Description + " | " + lang + " | " + Math.round((new Date(Date.now()) - new Date(Date.parse(jsonObj[i].Time))) / 1000 / 60) + " min sedan\n\n");

                }
            });

            connection.on(digiFunctions.onInfoSend, data => {
                digiUi.notification.play();
                digiUi.infoBox.append(data + "\n");
                digiUi.infoBox.scrollTop(digiUi.infoBox[0].scrollHeight);     
                alert('Ny info från läraren:\n' + data);
            });

            connection.on('onLogIn', data => {
                $("#loggedInList").text("");
                var jsonObj = JSON.parse(data);
                for (var i = 0; i < jsonObj.length; i++) {
                    $("#loggedInList").append(jsonObj[i].Alias + "\n");
                }
                $("#loggedInList").scrollTop($("#loggedInList")[0].scrollHeight);
            });

            connection.on('onDisconnect', data => {
                window.location.replace("/Error/InputError");
            });

            connection.on(digiFunctions.onUpdateInfoBox, data => {
                digiUi.infoBox.val("");
                var jsonObj = JSON.parse(data);
                for (var i = 0; i < jsonObj.length; i++) {
                    digiUi.infoBox.append(jsonObj[i] + "\n");
                }
                digiUi.infoBox.scrollTop(digiUi.infoBox[0].scrollHeight);
            });
        });
    </script>
}